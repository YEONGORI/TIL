{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/gori/practice/instar/components/auth/Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from \"firebase/app\";\n\nrequire(\"firebase/auth\");\n\nexport var Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state == {\n      email: \"\",\n      password: \"\"\n    };\n    _this.onLoginIn = _this.onLoginIn.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"onLoginIn\",\n    value: function onLoginIn() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function (result) {\n        console.log(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"email\",\n        onChangeText: function onChangeText(email) {\n          _this2.setState({\n            email: email\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          _this2.setState({\n            password: password\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.onLoginIn();\n        },\n        title: \"Sign In\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\nexport default Login;","map":{"version":3,"sources":["/home/gori/practice/instar/components/auth/Login.js"],"names":["React","Component","firebase","require","Login","props","state","email","password","onLoginIn","bind","auth","signInWithEmailAndPassword","then","result","console","log","catch","error","setState"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAGA,OAAOC,QAAP,MAAqB,cAArB;;AACAC,OAAO,CAAC,eAAD,CAAP;;AAEA,WAAaC,KAAb;AAAA;;AAAA;;AACE,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,IACE;AACEC,MAAAA,KAAK,EAAE,EADT;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADF;AAMA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,+BAAjB;AARiB;AASlB;;AAVH;AAAA;AAAA,WAYE,qBAAY;AACV,wBAA4B,KAAKJ,KAAjC;AAAA,UAAQC,KAAR,eAAQA,KAAR;AAAA,UAAeC,QAAf,eAAeA,QAAf;AACAN,MAAAA,QAAQ,CACLS,IADH,GAEGC,0BAFH,CAE8BL,KAF9B,EAEqCC,QAFrC,EAGGK,IAHH,CAGQ,UAACC,MAAD,EAAY;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,OALH,EAMGG,KANH,CAMS,UAACC,KAAD,EAAW;AAChBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OARH;AASD;AAvBH;AAAA;AAAA,WAyBE,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,YAAY,EAAE,sBAACX,KAAD,EAAW;AACvB,UAAA,MAAI,CAACY,QAAL,CAAc;AAAEZ,YAAAA,KAAK,EAALA;AAAF,WAAd;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,UADd;AAEE,QAAA,eAAe,EAAE,IAFnB;AAGE,QAAA,YAAY,EAAE,sBAACC,QAAD,EAAc;AAC1B,UAAA,MAAI,CAACW,QAAL,CAAc;AAAEX,YAAAA,QAAQ,EAARA;AAAF,WAAd;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAeE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,SAAL,EAAN;AAAA,SAAjB;AAAyC,QAAA,KAAK,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,CADF;AAmBD;AA7CH;;AAAA;AAAA,EAA2BR,SAA3B;AAgDA,eAAeG,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Button, TextInput } from \"react-native\";\n\nimport firebase from \"firebase/app\";\nrequire(\"firebase/auth\");\n\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state ==\n      {\n        email: \"\",\n        password: \"\",\n      };\n\n    this.onLoginIn = this.onLoginIn.bind(this);\n  }\n\n  onLoginIn() {\n    const { email, password } = this.state;\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        console.log(result);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <View>\n        <TextInput\n          placeholder=\"email\"\n          onChangeText={(email) => {\n            this.setState({ email });\n          }}\n        />\n        <TextInput\n          placeholder=\"password\"\n          secureTextEntry={true}\n          onChangeText={(password) => {\n            this.setState({ password });\n          }}\n        />\n\n        <Button onPress={() => this.onLoginIn()} title=\"Sign In\" />\n      </View>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}