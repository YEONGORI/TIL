{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/gori/practice/instar/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TabBarIOS } from \"react-native-web/dist/index\";\nimport Settings from \"react-native-web/dist/exports/Settings\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser } from \"../redux/actions/index\";\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentUser = this.props.currentUser;\n      var Tab = createBottomTabNavigator();\n      console.log(currentUser);\n\n      if (currentUser === undefined) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 14\n          }\n        }, \"\\uC798\\uAC00\");\n      }\n\n      return React.createElement(Tab, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Settings\",\n        component: SettingsScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateProps = function mapStateProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["/home/gori/practice/instar/components/Main.js"],"names":["React","Component","TabBarIOS","createBottomTabNavigator","connect","bindActionCreators","fetchUser","Main","props","currentUser","Tab","console","log","undefined","HomeScreen","SettingsScreen","mapStateProps","store","userState","mapDispatchProps","dispatch"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;SACqBC,S;;AACrB,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,SAAT;AAEA,WAAaC,IAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,6BAAoB;AAClB,WAAKC,KAAL,CAAWF,SAAX;AACD;AAHH;AAAA;AAAA,WAIE,kBAAS;AACP,UAAQG,WAAR,GAAwB,KAAKD,KAA7B,CAAQC,WAAR;AACA,UAAMC,GAAG,GAAGP,wBAAwB,EAApC;AAEAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;;AAEA,UAAIA,WAAW,KAAKI,SAApB,EAA+B;AAC7B,eAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;;AACD,aACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAEC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,UAAjB;AAA4B,QAAA,SAAS,EAAEC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;AAnBH;;AAAA;AAAA,EAA0Bd,SAA1B;;AAsBA,IAAMe,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SAAY;AAChCR,IAAAA,WAAW,EAAEQ,KAAK,CAACC,SAAN,CAAgBT;AADG,GAAZ;AAAA,CAAtB;;AAIA,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACrCf,EAAAA,kBAAkB,CAAC;AAAEC,IAAAA,SAAS,EAATA;AAAF,GAAD,EAAgBc,QAAhB,CAAlB;AACD,CAFD;;AAIA,eAAehB,OAAO,CAACY,aAAD,EAAgBG,gBAAhB,CAAP,CAAyCZ,IAAzC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, TabBarIOS, Settings } from \"react-native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser } from \"../redux/actions/index\";\n\nexport class Main extends Component {\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n  render() {\n    const { currentUser } = this.props;\n    const Tab = createBottomTabNavigator();\n\n    console.log(currentUser);\n\n    if (currentUser === undefined) {\n      return <View>잘가</View>;\n    }\n    return (\n      <Tab>\n        <Tab.Screen name=\"Home\" component={HomeScreen} />\n        <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n      </Tab>\n    );\n  }\n}\n\nconst mapStateProps = (store) => ({\n  currentUser: store.userState.currentUser,\n});\n\nconst mapDispatchProps = (dispatch) => {\n  bindActionCreators({ fetchUser }, dispatch);\n};\n\nexport default connect(mapStateProps, mapDispatchProps)(Main);\n"]},"metadata":{},"sourceType":"module"}